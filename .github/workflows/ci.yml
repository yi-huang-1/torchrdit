name: CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]
  release:
    types: [ published ]

permissions:
  contents: read
  id-token: write  # for PyPI publishing

jobs:
  # Shared setup and validation
  lint-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up environment
        uses: ./.github/actions/setup-env
      
      - name: Run ruff
        uses: astral-sh/ruff-action@v3
        with:
          args: check
      
      - name: Install project
        run: uv sync --locked --all-extras
      
      - name: Run tests
        run: uv run pytest
  
  # Build artifacts
  build:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up environment
        uses: ./.github/actions/setup-env
      
      - name: Install project
        run: uv sync --locked --all-extras
      
      - name: Build distributions
        run: uv build
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/
  
  # Deploy documentation (only on main)
  deploy-docs:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: lint-and-test
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up environment
        uses: ./.github/actions/setup-env
      
      - name: Install project with dev dependencies
        run: uv sync --locked --all-extras --dev
      
      - name: Generate documentation
        run: |
          mkdir -p wiki
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          uv run python generate_docs.py
      
      - name: Deploy to Wiki
        uses: Andrew-Chen-Wang/github-wiki-action@v4
        env:
          WIKI_DIR: wiki/
          GH_MAIL: ${{ github.actor }}@users.noreply.github.com
          GH_NAME: ${{ github.actor }}
  
  # Publish to PyPI (only on release)
  publish:
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: pypi
      url: https://pypi.org/project/torchrdit/${{ github.event.release.name }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist/
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/